/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.6.1/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id 'eclipse'
    id 'maven-publish'
    id 'checkstyle'
    id 'pmd'
}

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    maven {url 'https://jitpack.io'}
}

dependencies {
    api group: 'gnu.getopt', name: 'java-getopt', version: '1.0.13'
    api group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
    api group: 'org.hibernate.validator', name: 'hibernate-validator', version: '7.0.1.Final'
    api group: 'org.glassfish', name: 'jakarta.el', version: '4.0.1'
    // Use JUnit test framework
    testImplementation 'junit:junit:4.13.2'
}

group='com.github.JhonnyBravo'
version='master-SNAPSHOT'
sourceCompatibility=1.8
targetCompatibility=1.8

task sourcesJar(type: Jar, dependsOn: classes){
    classifier='sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc){
    classifier='javadoc'
    from javadoc.destinationDir
}

artifacts{
    archives sourcesJar
    archives javadocJar
}

java{
    withJavadocJar()
    withSourcesJar()
}

publishing{
    publications{
        mavenJava(MavenPublication){
            artifactId='java-itamae-contents'
            from components.java
            versionMapping{
                usage('java-api'){
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime'){
                    fromResolutionResult()
                }
            }
            pom{
                name='java-itamae-contents'
                description='テキストファイルの読書きを管理する為の Java ライブラリ'
                url='https://github.com/JhonnyBravo/java-itamae-contents'
            }
        }
    }
    repositories{
        maven{
            def releasesRepoUrl=layout.buildDirectory.dir('repos/releases')
            def snapshotsRepoUrl=layout.buildDirectory.dir('repos/snapshots')
            url=version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
    }
}

javadoc{
    options.charSet='UTF-8'
    options.encoding='UTF-8'
}

checkstyle {
    toolVersion='8.41.1'
}

pmd {
    toolVersion='6.33.0'
    ignoreFailures=true
    ruleSetFiles=files("config/pmd/custom-java.xml")
    ruleSets=[]
}

tasks.withType(JavaCompile){
    options.encoding='UTF-8'
}

afterEvaluate{
    jar{
        manifest{
            attributes 'Main-Class': getProperty('jar.manifest.attributes.Main-Class')
            attributes 'Class-Path': configurations.runtimeClasspath.collect{it.name}.join(' ')
        }
        
        doLast{
            copy{
                from configurations.runtimeClasspath
                into destinationDirectory
            }
        }
    }
}
